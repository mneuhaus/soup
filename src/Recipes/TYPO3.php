<?php
namespace Famelo\Soup\Recipes;

/*
 * This file belongs to the package "Famelo Soup".
 * See LICENSE.txt that was shipped with this package.
 */

class TYPO3 {
	/**
	 * @var string
	 */
	protected $emConfPath;

	/**
	 * @var string
	 */
	protected $ingredients = array(
		'Controller' => '\Famelo\Soup\Ingredients\TYPO3\Controller',
		// 'Model' => '\Famelo\Soup\Ingredients\TYPO3\Model'
	);

	public function __construct() {
		$this->emConfPath = WORKING_DIRECTORY . '/ext_emconf.php';
	}

	public function relevantToDirectory($directory) {
		return file_exists($directory . '/ext_emconf.php');
	}

	public function getIngredients() {
		return $this->ingredients;
	}

	public function getFields() {
		$metadata = $this->getMetadata();
		return array(
			'title' => array(
				'label' => 'Title',
				'value' => $metadata['title']
			),
			'description' => array(
				'label' => 'Description',
				'value' => $metadata['description']
			),
			'author' => array(
				'label' => 'Author',
				'value' => $metadata['author']
			),
			'author_email' => array(
				'label' => 'Author E-Mail',
				'value' => $metadata['author_email']
			)
		);
	}

	public function saveFields($fieldValues) {
		foreach ($fieldValues['ingredients'] as $ingredientData) {
			$reflection = new \ReflectionClass($ingredientData['_class']);
			$ingredient = $reflection->newInstanceArgs($ingredientData['_arguments']);
			$ingredient->save($ingredientData);
		}
		$metadata = $this->getMetadata();
		foreach ($fieldValues as $key => $value) {
			if (isset($metadata[$key])) {
				$metadata[$key] = $value;
			}
		}
		$output = sprintf('<?php

/***************************************************************
 * Extension Manager/Repository config file for ext: "%s"
 *
 * Auto generated by famelo/soup %s
 *
 * Manual updates:
 * Only the data in the array - anything else is removed by next write.
 * "version" and "dependencies" must not be touched!
 ***************************************************************/

$EM_CONF[$_EXTKEY] = %s;',
			basename(WORKING_DIRECTORY),
			date('Y-m-d'),
			var_export($metadata, TRUE)
		);
		file_put_contents($this->emConfPath, $output);
	}

	public function getMetadata() {
		$_EXTKEY = 'foo';
		$EM_CONF = array();
		require($this->emConfPath);
		return $EM_CONF[$_EXTKEY];
	}
}